<views:MvxWpfView
    x:Class="WhatHaveIDone.Views.TaskDayEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mvx="clr-namespace:MvvmCross.Platforms.Wpf.Binding;assembly=MvvmCross.Platforms.Wpf"
    xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
    xmlns:converter="clr-namespace:WhatHaveIDone.Converter" 
    xmlns:customcontrols="clr-namespace:WhatHaveIDone.CustomControls"
    mc:Ignorable="d"
    x:Name="_taskDayEditor"
    d:DesignHeight="450" d:DesignWidth="800">
    <views:MvxWpfView.Resources>
        
        <Style TargetType="DockPanel">
            <Setter Property="Background" Value="#59585E"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontFamily" Value="Verdana"/>
        </Style>

        <Style x:Key="TextBoxLabelStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="10 0 0 2"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontFamily" Value="Consolas"/>
        </Style>

        
        <Style x:Key="TextInputStyle" TargetType="TextBox">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontFamily" Value="Verdana"/>

            <Setter Property="Background" Value="#5f87a1"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Margin" Value="10 0 10 15"/>
            
        </Style>
        
        <Style TargetType="Button">
            <Setter Property="Background" Value="#2c78a8" />
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="110"/>
            <Setter Property="Margin" Value="10 5 10 5"/>
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="gd" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#5f95b8" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#14384f" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="ToolTip" Value="Close (App will still run in Systemtray)"/>
            <Setter Property="Background" Value="#59585E" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="gd" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#5f95b8" TargetName="gd"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converter:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
        <converter:NotNullToVisibilityConveter x:Key="NotNullToVisibilityConveter" />
        <converter:DateTimeUtcToLocalDateTimeConverter x:Key="DateTimeUtcToLocalDateTimeConverter" />
        <converter:DebugConverter x:Key="DebugConverter" />
    </views:MvxWpfView.Resources>

    <DockPanel MouseLeftButtonDown="DockPanel_MouseLeftButtonDown">
        <Grid DockPanel.Dock="Top">
            <DockPanel Height="40" 
                VerticalAlignment="Top">

                <TextBlock DockPanel.Dock="Left" FontSize="15" FontStyle="Italic" FontFamily="Arial" >What have I done?</TextBlock>

                <Button x:Name="MinimizeButton"
                        DockPanel.Dock="Right"
                        HorizontalAlignment="Right"
                        Style="{StaticResource CloseButtonStyle}"
                    KeyboardNavigation.IsTabStop="False"
                    Margin="0 -10 0 0"
                    Click="MinimizeButton_Click">
                    <Grid Margin="13 8 13 8" Name="parent">
                        <Line  X1="0" Y1="0" X2="{Binding ElementName='parent', Path='ActualWidth'}" Y2="{Binding ElementName='parent', Path='ActualHeight'}" Stroke="Black" StrokeThickness="2" />
                        <Line  X1="0" Y1="{Binding ElementName='parent', Path='ActualHeight'}" X2="{Binding ElementName='parent', Path='ActualWidth'}" Y2="0" Stroke="Black" StrokeThickness="2" />
                    </Grid>
                </Button>
            </DockPanel>
        </Grid>

        <Grid DockPanel.Dock="Bottom"> 
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"></RowDefinition>
                <RowDefinition Height="120"></RowDefinition>
                <RowDefinition Height="70"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0" Visibility="{Binding IsTaskStarted, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="70"/>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="130"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.ColumnSpan="2" Text="Start a new Task" />

                <StackPanel Grid.Row="1" Grid.Column="0">
                    <TextBlock Text="Name" Style="{StaticResource TextBoxLabelStyle}"/>
                    <TextBox x:Name="TaskNameTextBox"  Style="{StaticResource TextInputStyle}" HorizontalAlignment="Left" Width="100"  Text="{Binding TaskName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  />
                </StackPanel>
                <StackPanel Grid.Row="1" Grid.Column="1">
                    <TextBlock Text="Comment" Style="{StaticResource TextBoxLabelStyle}"/>
                    <TextBox  Text="{Binding Comment, Mode=TwoWay}"  Style="{StaticResource TextInputStyle}" TextWrapping="Wrap" AcceptsReturn="True" Height="40"  />
                </StackPanel>
                
                <Button Grid.Row="2" Grid.ColumnSpan="2" mvx:Bi.nd="Command StartTaskCommand"  IsEnabled="{Binding CanStartTask}" HorizontalAlignment="Right" >Start</Button>
            </Grid>

            <StackPanel Grid.Row="0" Visibility="{Binding IsTaskStarted, Converter={StaticResource BooleanToVisibilityConverter}}" MinHeight="150">
                <DockPanel >
                    <TextBlock>
                        <Run Text="{Binding CurrentTask.Name}" FontWeight="Bold" />
                        <Run> is running since </Run>
                        <Run Text="{Binding CurrentTask.Begin, StringFormat=HH:mm, Converter={StaticResource DateTimeUtcToLocalDateTimeConverter}}" />
                    </TextBlock>

                    <TextBlock Text="*Paused*" Foreground="DarkOrange" Visibility="{Binding IsTaskPaused, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <StackPanel HorizontalAlignment="Right" DockPanel.Dock="Right">
                        <Button mvx:Bi.nd="Command StopTaskCommand" Visibility="{Binding IsTaskPaused, Converter={StaticResource InverseBooleanToVisibilityConverter}}"  >Stop</Button>

                        <Button mvx:Bi.nd="Command ContinueTaskCommand" Visibility="{Binding IsTaskPaused, Converter={StaticResource BooleanToVisibilityConverter}}" >Continue</Button>
                        <Button mvx:Bi.nd="Command EndTaskCommand" Visibility="{Binding IsTaskPaused, Converter={StaticResource BooleanToVisibilityConverter}}">End</Button>
                    </StackPanel>
                </DockPanel>
            </StackPanel>


            <Grid Grid.Row="1" Background="#677e80" Visibility="{Binding SelectedTask, Converter={StaticResource NotNullToVisibilityConveter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="130"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.ColumnSpan="2">
                    <Run Text="Edit Task" FontStyle="Normal"/>
                    <Run Text="{Binding Path=SelectedTask.Name}" FontWeight="Bold" />
                </TextBlock>

                <StackPanel Grid.Row="1" Grid.Column="0">
                    <TextBlock Text="Name" Style="{StaticResource TextBoxLabelStyle}"/>
                    <TextBox x:Name="TaskNameEditTextBox"  Style="{StaticResource TextInputStyle}" HorizontalAlignment="Left" Width="100"  Text="{Binding Path=SelectedTask.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  />
                </StackPanel>

                <StackPanel Grid.Row="1" Grid.Column="1">
                    <TextBlock Text="Comment" Style="{StaticResource TextBoxLabelStyle}"/>
                    <TextBox Text="{Binding SelectedTask.Comment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextInputStyle}" TextWrapping="Wrap" AcceptsReturn="True" Height="40"  />
                </StackPanel>
                

            </Grid>

            <customcontrols:TaskTimelineControl x:Name="_taskTimelineControl"
                Grid.Row="2"
                Tasks="{Binding DataContext.Tasks, ElementName=_taskDayEditor}" 
                TimeLineStart="{Binding DataContext.DayUtc, ElementName=_taskDayEditor}" 
                TimeLineEnd="{Binding DataContext.EndUtc, ElementName=_taskDayEditor}" 
                SelectedTask="{Binding DataContext.SelectedTask, Mode=TwoWay, ElementName=_taskDayEditor}"
                Margin="10"
                Background="#5f87a1"
                />

        </Grid>



    </DockPanel>

</views:MvxWpfView>